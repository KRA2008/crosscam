<?xml version="1.0" encoding="utf-8" ?>
<page:BasePage xmlns="http://xamarin.com/schemas/2014/forms"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
               xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
               xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
               xmlns:system="clr-namespace:System;assembly=netstandard"
               xmlns:views="http://xamarin.com/schemas/2020/toolkit"
               xmlns:page="clr-namespace:CrossCam.Page;assembly=CrossCam"
               xmlns:model="clr-namespace:CrossCam.Model;assembly=CrossCam"
               x:DataType="vm:SettingsViewModel"
               x:Class="CrossCam.Page.SettingsPage"
               Title="Settings">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="BoxView">
                <Setter Property="Color"
                        Value="White"/>
                <Setter Property="HeightRequest"
                        Value="1"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin"
                        Value="10"/>
                <Setter Property="VerticalTextAlignment"
                        Value="Center"/>
                <Setter Property="HorizontalOptions"
                        Value="StartAndExpand"/>
            </Style>
            <Style TargetType="Switch">
                <Setter Property="Margin"
                        Value="10"/>
            </Style>
            <x:Double x:Key="saveModesHeight">15</x:Double>
            <Style TargetType="Image"
                   x:Key="saveModes">
                <Setter Property="HeightRequest"
                        Value="{StaticResource saveModesHeight}"/>
                <Setter Property="HorizontalOptions"
                        Value="Center"/>
            </Style>
            <Style TargetType="Frame">
                <Setter Property="BorderColor"
                        Value="White"/>
                <Setter Property="Margin"
                        Value="1"/>
                <Setter Property="Padding"
                        Value="1"/>
            </Style>
            <Style TargetType="Entry">
                <Setter Property="Keyboard"
                        Value="Numeric"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView VerticalOptions="StartAndExpand">
        <StackLayout>

            <BoxView/>

            <views:Expander x:Name="_previewMethodExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _previewMethodExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _previewMethodExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Preview Viewing Method"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid ColumnSpacing="0"
                              RowSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="65"/>
                                <ColumnDefinition Width="10"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Frame Grid.Row="0"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   HorizontalOptions="FillAndExpand">
                                <Picker ItemsSource="{Binding Modes}"
                                        SelectedIndex="{Binding Settings.Mode, Converter={vc:ModeValueConverter}}"/>
                            </Frame>
                            <Image Grid.Row="0"
                                   Grid.Column="3" 
                                   Source="help"
                                   IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding NavigateToFaqPageAndSection}" 
                                                          CommandParameter="{x:Static model:FaqScrollOptions.Cardboard}"/>
                                </Image.GestureRecognizers>
                            </Image>

                            <Label Grid.Row="1"
                                   Grid.Column="1"
                                   Text="Capture using single-shot mirror division method"/>
                            <Image Grid.Row="1"
                                   Grid.Column="2" 
                                   Source="help">
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding NavigateToFaqPageAndSection}" 
                                                          CommandParameter="{x:Static model:FaqScrollOptions.Mirror}"/>
                                </Image.GestureRecognizers>
                            </Image>
                            <Switch Grid.Row="1"
                                    Grid.Column="3" 
                                    IsToggled="{Binding Settings.IsCaptureInMirrorMode}"/>

                            <Label Grid.Row="2"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Immersive final viewing"
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>
                            <Switch Grid.Row="2"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.CardboardSettings.ImmersiveCardboardFinal}"
                                    IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>

                            <Label Grid.Row="3"
                                   Grid.Column="1" 
                                   Grid.ColumnSpan="2"
                                   Text="Cardboard separation distance"
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>
                            <Frame Grid.Row="3" 
                                   Grid.Column="3" 
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                                <Entry Text="{Binding Settings.CardboardSettings.CardboardIpd}"/>
                            </Frame>

                            <Label Grid.Row="4"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Add lens correction/barrel distortion (may lower frame rate)"
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>
                            <Switch Grid.Row="4" 
                                    Grid.Column="3" 
                                    IsToggled="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                    IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>

                            <Label Grid.Row="5"
                                   Grid.Column="1" 
                                   Grid.ColumnSpan="2"
                                   Text="Add lens correction/barrel distortion to final images only (may slow down final display but will speed up capturing)"
                                   IsVisible="False">
                                <Label.Triggers>
                                    <MultiTrigger TargetType="Label">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Label.Triggers>
                            </Label>
                            <Switch Grid.Row="5"
                                    Grid.Column="3" 
                                    IsToggled="{Binding Settings.CardboardSettings.AddBarrelDistortionFinalOnly}"
                                    IsVisible="False">
                                <Switch.Triggers>
                                    <MultiTrigger TargetType="Switch">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Switch.Triggers>
                            </Switch>

                            <Label Grid.Row="6"
                                   Grid.Column="1" 
                                   Grid.ColumnSpan="2"
                                   Text="Lens correction strength"
                                   IsVisible="False">
                                <Label.Triggers>
                                    <MultiTrigger TargetType="Label">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Label.Triggers>
                            </Label>
                            <Frame Grid.Row="6"
                                   Grid.Column="3" 
                                   IsVisible="False">
                                <Frame.Triggers>
                                    <MultiTrigger TargetType="Frame">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Frame.Triggers>
                                <Entry Text="{Binding Settings.CardboardSettings.CardboardBarrelDistortion}"/>
                            </Frame>

                            <Label Grid.Row="7"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Downsize image (may increase frame rate)"
                                   IsVisible="False">
                                <Label.Triggers>
                                    <MultiTrigger TargetType="Label">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Label.Triggers>
                            </Label>
                            <Switch Grid.Row="7"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.CardboardSettings.CardboardDownsize}"
                                    IsVisible="False">
                                <Switch.Triggers>
                                    <MultiTrigger TargetType="Switch">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Switch.Triggers>
                            </Switch>

                            <Label Grid.Row="8"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Downsize image percentage"
                                   IsVisible="False">
                                <Label.Triggers>
                                    <MultiTrigger TargetType="Label">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.CardboardDownsize}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Label.Triggers>
                            </Label>
                            <Frame Grid.Row="8"
                                   Grid.Column="3"
                                   IsVisible="False">
                                <Frame.Triggers>
                                    <MultiTrigger TargetType="Frame">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.CardboardDownsize}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.CardboardSettings.AddBarrelDistortion}"
                                                              Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible"
                                                Value="True"/>
                                    </MultiTrigger>
                                </Frame.Triggers>
                                <Entry Text="{Binding Settings.CardboardSettings.CardboardDownsizePercentage}"/>
                            </Frame>

                            <Button Grid.Row="9"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3" 
                                    Text="Reset to Defaults"
                                    Command="{Binding ResetCardboardToDefaults}"
                                    IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"/>

                            <Label Grid.Row="2"
                                   Grid.Column="1" 
                                   Grid.ColumnSpan="2"
                                   Text="Maximum parallel view image width (points)"
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"/>
                            <Frame Grid.Row="2"
                                   Grid.Column="3" 
                                   IsVisible="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}">
                                <Entry Text="{Binding Settings.MaximumParallelWidth}"/>
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_pairingExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _pairingExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _pairingExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Pairing"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid ColumnSpacing="0"
                              RowSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="70"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="0"
                                   HorizontalOptions="CenterAndExpand"
                                   Text="Role not selected">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Settings.PairSettings.IsPairedPrimary.HasValue}"
                                                 Value="False">
                                        <Setter Property="Text"
                                                Value="Role not selected"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"
                                                 Value="True">
                                        <Setter Property="Text"
                                                Value="Role: Primary"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Settings.PairSettings.IsPairedPrimary, Converter={vc:NullableBooleanInvertConverter}}"
                                                 Value="True">
                                        <Setter Property="Text"
                                                Value="Role: Secondary"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <Button Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Grid.Row="1"
                                    Text="Go to Pairing Setup Page"
                                    Command="{Binding NavigateToPairingPageCommand}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="2"
                                   Text="Preview frame delay (higher number will reduce frame rate but save battery)"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="2"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}">
                                <Entry Text="{Binding Settings.PairSettings.PairedPreviewFrameDelayMs}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="3"
                                   Text="Capture countdown length (timer)"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="3"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}">
                                <Entry Text="{Binding Settings.PairSettings.PairedCaptureCountdown}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="4"
                                   Text="Clock sample count (lower number will decrease time required for initial sync but may decrease sync accuracy)"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="4"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}">
                                <Entry Text="{Binding Settings.PairSettings.PairSyncSampleCount}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="5"
                                   Text="Connection timeout (seconds) (0 means no timeout)"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary.HasValue}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="5"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary.HasValue}">
                                <Entry Text="{Binding Settings.PairSettings.TimeoutSeconds}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="6"
                                   Text="Capture moment extra delay (ms) (adds an extra delay to the target capture moment on this device only)"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary.HasValue}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="6"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary.HasValue}">
                                <Entry Text="{Binding Settings.PairSettings.CaptureMomentExtraDelayMs}"/>
                            </Frame>

                            <Button Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Grid.Row="7" 
                                    Text="Reset to Defaults"
                                    Command="{Binding ResetPairToDefaults}"
                                    IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="8"
                                   Text="Field of view correction"
                                   HorizontalOptions="CenterAndExpand"
                                   IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}"/>

                            <Grid Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Grid.Row="9"
                                  ColumnSpacing="0"
                                  RowSpacing="0"
                                  IsVisible="{Binding Settings.PairSettings.IsPairedPrimary, Converter={StaticResource nullableBoolean}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0"
                                       Grid.Row="0"
                                       IsVisible="{Binding Settings.PairSettings.IsFovCorrectionSet}"
                                       Text="{Binding Settings.PairSettings.FovPrimaryCorrection, StringFormat='Primary: {0}'}"
                                       HorizontalOptions="End"/>
                                <Label Grid.Column="0"
                                       Grid.Row="1"
                                       IsVisible="{Binding Settings.PairSettings.IsFovCorrectionSet}"
                                       Text="{Binding Settings.PairSettings.FovSecondaryCorrection, StringFormat='Secondary: {0}'}"
                                       HorizontalOptions="End"/>

                                <Label Grid.Column="0"
                                       Grid.Row="0"
                                       Grid.ColumnSpan="2"
                                       IsVisible="{Binding Settings.PairSettings.IsFovCorrectionSet, Converter={StaticResource invert}}"
                                       Text="FOV correction not set (do a capture with paired devices to walk through set up)."/>

                                <Button Grid.Column="1"
                                        Grid.Row="2"
                                        Text="Reset"
                                        Command="{Binding ResetFovCorrectionCommand}"
                                        HorizontalOptions="StartAndExpand"
                                        VerticalOptions="CenterAndExpand"
                                        IsVisible="{Binding Settings.PairSettings.IsFovCorrectionSet}"/>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_alignmentExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _alignmentExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _alignmentExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Automatic Alignment"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid RowSpacing="0"
                              ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="50"/>
                            </Grid.RowDefinitions>

                            <Image Source="smartToy"
                                   Grid.ColumnSpan="3"
                                   Grid.Row="0"
                                   HorizontalOptions="CenterAndExpand"/>

                            <Label Grid.Column="0"
                                   Grid.Row="1"
                                   Text="Automatically align after capture"/>
                            <Image Grid.Row="1"
                                   Grid.Column="1" 
                                   Source="help">
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding NavigateToFaqPageAndSection}" 
                                                          CommandParameter="{x:Static model:FaqScrollOptions.AutoAlignment}"/>
                                </Image.GestureRecognizers>
                            </Image>
                            <Switch Grid.Column="2"
                                    Grid.Row="1"
                                    IsToggled="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="2"
                                   Text="Try to use keypoint alignment first always"
                                   IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="2"
                                    IsToggled="{Binding Settings.AlignmentSettings.ForceKeypoints2}"
                                    IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="3"
                                   Text="Try to use ECC alignment first always"
                                   IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="3"
                                    IsToggled="{Binding Settings.AlignmentSettings.ForceEcc}"
                                    IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="4"
                                   Text="Show advanced alignment settings"
                                   IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="4"
                                    IsToggled="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"
                                    IsVisible="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="5"
                                   Text="Save drawn result warped by OpenCv"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="5"
                                    IsToggled="{Binding Settings.AlignmentSettings.DrawResultWarpedByOpenCv}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="6"
                                   Text="Intermediate downsize percentage"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="6"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.DownsizePercentage}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="7"
                                   HorizontalOptions="CenterAndExpand"
                                   Text="Keypoint settings"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="8"
                                   Text="Transformation finding method"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="8"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Picker ItemsSource="{Binding TransformationFindingMethods}"
                                        SelectedIndex="{Binding Settings.AlignmentSettings.TransformationFindingMethod}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="9"
                                   Text="Crosscheck keypoints (vs ratio checks)"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="9"
                                    IsToggled="{Binding Settings.AlignmentSettings.UseCrossCheck}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="10"
                                   Text="Minimum keypoints"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="10"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.MinimumKeypoints1}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="11"
                                   Text="Discard outliers by distance"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="11"
                                    IsToggled="{Binding Settings.AlignmentSettings.DiscardOutliersByDistance}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="12"
                                   Text="Discard outliers by slope"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="12"
                                    IsToggled="{Binding Settings.AlignmentSettings.DiscardOutliersBySlope1}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="13"
                                   Text="Keypoint outlier threshold (tenths of standard deviation)"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="13"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.KeypointOutlierThresholdTenths}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="14"
                                   Text="Save an unaligned joined copy with matches drawn"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="14"
                                    IsToggled="{Binding Settings.AlignmentSettings.DrawKeypointMatches}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="15"
                                   Text="Do keystone correction"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="15"
                                    IsToggled="{Binding Settings.AlignmentSettings.DoKeystoneCorrection1}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="16"
                                   Text="Ratio test"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="16"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.RatioTest}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="17"
                                   Text="Physical distance threshold (set to 1 to disable)"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="17"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.PhysicalDistanceThreshold}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="18"
                                   Text="Read mode color"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Switch Grid.Column="2"
                                    Grid.Row="18"
                                    IsToggled="{Binding Settings.AlignmentSettings.ReadModeColor}"
                                    IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>



                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="3"
                                   Grid.Row="19"
                                   Text="Ecc settings"
                                   HorizontalOptions="CenterAndExpand"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="20"
                                   Text="Iterations"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="20"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.EccIterations}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="21"
                                   Text="Epsilon level"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="21"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.EccEpsilonLevel}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="22"
                                   Text="Downsized pyramid estimating layers"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="22"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.EccPyramidLayers}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="23"
                                   Text="Minimum required correlation coefficient"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="23"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Entry Text="{Binding Settings.AlignmentSettings.EccThresholdPercentage}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="24"
                                   Text="Motion type"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
                            <Frame Grid.Column="2"
                                   Grid.Row="24"
                                   IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                                <Picker ItemsSource="{Binding MotionTypes}"
                                        SelectedIndex="{Binding Settings.AlignmentSettings.EccMotionType}"/>
                            </Frame>

                            <Button Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Grid.Row="25"
                                    Text="Reset to Defaults"
                                    Command="{Binding ResetAlignmentToDefaults}"/>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_savingExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _savingExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _savingExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Saving"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0"
                                   Grid.Column="0"
                                   Text="{Binding Settings.ResolutionProportion, StringFormat='{0}%'}"
                                   FontSize="{StaticResource saveModesHeight}"/>
                            <Label Grid.Row="0"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Resolution proportion"/>
                            <Frame Grid.Row="0"
                                   Grid.Column="3"
                                   WidthRequest="50"
                                   HorizontalOptions="End">
                                <Picker ItemsSource="{Binding ZeroToOneHundred}"
                                        SelectedIndex="{Binding Settings.ResolutionProportion}"
                                        HorizontalOptions="FillAndExpand"/>
                            </Frame>

                            <Label Grid.Row="1"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="3"
                                   Text="Save to subfolders/albums labeled by view method"/>
                            <Switch Grid.Row="1"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveIntoSeparateFolders}"/>

                            <Label Grid.Row="2"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="3"
                                   Text="Automatically clear captures after saving"/>
                            <Switch Grid.Row="2"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.ClearCapturesAfterSave}"/>

                            <Label Grid.Row="3"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="4"
                                   Text="(Saving will happen in order from top to bottom)"
                                   HorizontalOptions="CenterAndExpand"/>

                            <Image Grid.Row="4"
                                   Grid.Column="0"
                                   Source="saveBoth"
                                   Style="{StaticResource saveModes}"/>
                            <Label Grid.Row="4"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save each side separately (with no edits or border for easier post processing, left side saves first)"/>
                            <Switch Grid.Row="4"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveSidesSeparately}"/>

                            <Image Grid.Row="5"
                                   Grid.Column="0"
                                   Source="crossed"
                                   Style="{StaticResource saveModes}">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="7"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                            <Label Grid.Row="5"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save joined cross view version (with edits and border)">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="7"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Switch Grid.Row="5"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForCrossView}">
                                <Switch.Triggers>
                                    <DataTrigger TargetType="Switch"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="7"/>
                                    </DataTrigger>
                                </Switch.Triggers>
                            </Switch>

                            <Image Grid.Row="6"
                                   Grid.Column="0"
                                   Source="parallel"
                                   Style="{StaticResource saveModes}">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="6"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                            <Label Grid.Row="6"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save joined parallel view version (with edits and border)">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="6"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Switch Grid.Row="6"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForParallel}">
                                <Switch.Triggers>
                                    <DataTrigger TargetType="Switch"
                                                 Binding="{Binding Settings.Mode, Converter={StaticResource enumCompare}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                                 Value="True">
                                        <Setter Property="Grid.Row"
                                                Value="6"/>
                                    </DataTrigger>
                                </Switch.Triggers>
                            </Switch>

                            <Image Grid.Row="7"
                                   Grid.Column="0"
                                   Source="anaglyph"
                                   Style="{StaticResource saveModes}"/>
                            <Label Grid.Row="7"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save red/cyan anaglyph version (with edits but no border)"/>
                            <Switch Grid.Row="7"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForRedCyanAnaglyph}"/>

                            <Image Grid.Row="8"
                                   Grid.Column="0"
                                   Source="grayscaleAnaglyph"
                                   Style="{StaticResource saveModes}"/>
                            <Label Grid.Row="8"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save grayscale red/cyan anaglyph version (with edits but no border)"/>
                            <Switch Grid.Row="8"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForGrayscaleAnaglyph}"/>

                            <Image Grid.Row="9"
                                   Grid.Column="0"
                                   Source="saveOne"
                                   Style="{StaticResource saveModes}"/>
                            <Label Grid.Row="9"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save first side alone (with no edits or border) (for easy sharing of flat photo with flat view people)"/>
                            <Switch Grid.Row="9"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveRedundantFirstSide}"
                                    IsEnabled="{Binding EnableFirstSideAloneSwitch}"/>

                            <Image Grid.Row="10"
                                   Grid.Column="0"
                                   Source="triple"
                                   Style="{StaticResource saveModes}"/>
                            <Label Grid.Row="10"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save triple combination (with edits and border)"/>
                            <Switch Grid.Row="10"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForTriple}"/>

                            <Image Grid.Row="11"
                                   Grid.Column="0"
                                   Source="quad"
                                   Style="{StaticResource saveModes}"
                                   HeightRequest="25"/>
                            <Label Grid.Row="11"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save quad combination (with edits and border)"/>
                            <Switch Grid.Row="11"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForQuad}"/>

                            <Label Grid.Row="12"
                                   Grid.Column="0"
                                   HorizontalOptions="Center"
                                   Text="VR"/>
                            <Label Grid.Row="12"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Text="Save for Cardboard (with edits, no border, no spacing, full width, for loading back into CrossCam later)"/>
                            <Switch Grid.Row="12"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveForCardboard}"/>

                            <Label Grid.Row="13"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Text="{Binding SaveDirectory, StringFormat='Save to: {0}'}"
                                   IsVisible="{Binding CanSaveToArbitraryDirectory}"/>
                            <Button Grid.Row="13"
                                    Grid.Column="2"
                                    Grid.ColumnSpan="2"
                                    Command="{Binding ChooseDirectory}"
                                    Text="Browse..."
                                    IsVisible="False">
                                <Button.Triggers>
                                    <MultiTrigger TargetType="Button">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding CanSaveToArbitraryDirectory}"
                                                              Value="True"/>
                                            <BindingCondition Binding="{Binding Settings.SavingDirectory}"
                                                              Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Button.Triggers>
                            </Button>

                            <Button Grid.Row="13"
                                    Grid.Column="2"
                                    Grid.ColumnSpan="2"
                                    Command="{Binding ClearDirectory}"
                                    Text="Reset"
                                    IsVisible="{Binding Settings.SavingDirectory, Converter={vc:IsNotNullConverter}}"/>

                            <Label Grid.Row="14"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Text="{Binding ExternalDirectory, StringFormat='Save to external CrossCam directory at: {0} (warning: pictures there will be deleted if CrossCam is uninstalled)'}"
                                   IsVisible="{Binding CanSaveToExternalDirectory}"/>
                            <Switch Grid.Row="14"
                                    Grid.Column="3"
                                    IsToggled="{Binding Settings.SaveToExternal}"
                                    IsVisible="{Binding CanSaveToExternalDirectory}"/>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_borderExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _borderExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _borderExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Border"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid RowSpacing="0"
                              ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="55"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0"
                                   Grid.Row="0"
                                   Text="Add fuse guide on top (a dot above each side)"/>
                            <Switch Grid.Column="1" 
                                    Grid.Row="0"
                                    IsToggled="{Binding Settings.SaveWithFuseGuide}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="1" 
                                   Text="Add border"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="1" 
                                    IsToggled="{Binding Settings.AddBorder2}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="2" 
                                   Text="Border color"
                                   IsVisible="{Binding Settings.AddBorder2}"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="2" 
                                   IsVisible="{Binding Settings.AddBorder2}">
                                <Picker ItemsSource="{Binding BorderColors}"
                                        SelectedIndex="{Binding Settings.BorderColor, Converter={vc:BorderColorValueConverter}}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="3" 
                                   IsVisible="{Binding Settings.AddBorder2}" 
                                   Text="Border thickness (tenths of percentage of width)"/>
                            <Frame Grid.Column="1"
                                   Grid.Row="3" 
                                   IsVisible="{Binding Settings.AddBorder2}">
                                <Entry Text="{Binding Settings.BorderWidthProportion}"/>
                            </Frame>

                            <Label Grid.Column="0"
                                   Grid.Row="4" 
                                   Text="Clip border off when loading next stereo pair"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="4" 
                                    IsToggled="{Binding Settings.ClipBorderOnNextLoad}"/>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_guidesExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _guidesExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _guidesExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Capture Guides"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid ColumnSpacing="0"
                              RowSpacing="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0"
                                   Grid.Row="0" 
                                   Text="Lines visible"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="0" 
                                    IsToggled="{Binding Settings.AreGuideLinesVisible}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="1"
                                   Text="Different colored lines"
                                   IsVisible="{Binding Settings.AreGuideLinesVisible}"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="1"
                                    IsToggled="{Binding Settings.AreGuideLinesColored}"
                                    IsVisible="{Binding Settings.AreGuideLinesVisible}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="2"
                                   Text="Roll guide visible"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="2" 
                                    IsToggled="{Binding Settings.ShowRollGuide}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="3" 
                                   Text="Show fuse guide (a dot above each side)"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="3" 
                                    IsToggled="{Binding Settings.ShowPreviewFuseGuide}"/>

                            <Label Grid.Column="0"
                                   Grid.Row="4"
                                   Text="Show donut guide (will cause toe-in, so may require keystone editing)"/>
                            <Switch Grid.Column="1"
                                    Grid.Row="4"
                                    IsToggled="{Binding Settings.IsGuideDonutVisible}"/>
                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_editingExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _editingExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _editingExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Editing"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0"
                                   Grid.Column="0"
                                   Text="Maximum zoom proportion"/>
                            <Frame Grid.Row="0"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.ZoomMax}"/>
                            </Frame>

                            <Label Grid.Row="1"
                                   Grid.Column="0"
                                   Text="Maximum side crop proportion"/>
                            <Frame Grid.Row="1"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.SideCropMax}"/>
                            </Frame>

                            <Label Grid.Row="2"
                                   Grid.Column="0"
                                   Text="Maximum top/bottom crop proportion"/>
                            <Frame Grid.Row="2"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.TopOrBottomCropMax}"/>
                            </Frame>

                            <Label Grid.Row="3"
                                   Grid.Column="0"
                                   Text="Maximum vertical alignment proportion"/>
                            <Frame Grid.Row="3"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.VerticalAlignmentMax}"/>
                            </Frame>

                            <Label Grid.Row="4"
                                   Grid.Column="0"
                                   Text="Maximum rotation degrees"/>
                            <Frame Grid.Row="4"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.RotationMax}"/>
                            </Frame>

                            <Label Grid.Row="5"
                                   Grid.Column="0"
                                   Text="Maximum keystone"/>
                            <Frame Grid.Row="5"
                                   Grid.Column="1">
                                <Entry Text="{Binding Settings.EditsSettings.KeystoneMax}"/>
                            </Frame>

                            <Button Grid.Row="6" 
                                    Grid.Column="0" 
                                    Grid.ColumnSpan="2" 
                                    Text="Reset to Defaults"
                                    Command="{Binding ResetEditsToDefaults}"/>

                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
            </views:Expander>

            <BoxView/>

            <views:Expander x:Name="_cameraExpander"
                            Command="{Binding CloseOtherExpandersCommand}"
                            CommandParameter="{x:Reference _cameraExpander}"
                            IsExpanded="{Binding OpenExpander, Converter={vc:IsBindingEqualToParameterConverter}, ConverterParameter={x:Reference _cameraExpander}}">
                <views:Expander.Header>
                    <ce:ExpanderHeader Title="Camera"/>
                </views:Expander.Header>
                <views:Expander.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="70"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" 
                                   Grid.Column="0" 
                                   Text="Tap to point focus, double tap to switch back to continuous focus (or save or clear)"/>
                            <Switch Grid.Row="0" 
                                    Grid.Column="1" 
                                    IsToggled="{Binding Settings.IsTapToFocusEnabled2}"/>

                            <Label Grid.Row="1" 
                                   Grid.Column="0" 
                                   Text="Lock focus and exposure for second picture to focus and exposure from first picture"/>
                            <Switch Grid.Row="1" 
                                    Grid.Column="1" 
                                    IsToggled="{Binding Settings.IsLockToFirstEnabled}"/>

                            <Label Grid.Row="2" 
                                   Grid.Column="0" 
                                   Text="Force camera1 API (may be helpful if you're experiencing weirdness but will result in limited functionality, requires a force quit/restart to take effect)">
                                <Label.IsVisible>
                                    <OnPlatform x:TypeArguments="system:Boolean">
                                        <On Platform="iOS"
                                            Value="False"/>
                                        <On Platform="Android"
                                            Value="True"/>
                                    </OnPlatform>
                                </Label.IsVisible>
                            </Label>
                            <Switch Grid.Row="2" 
                                    Grid.Column="1" 
                                    IsToggled="{Binding Settings.IsForceCamera1Enabled}">
                                <Switch.IsVisible>
                                    <OnPlatform x:TypeArguments="system:Boolean">
                                        <On Platform="iOS"
                                            Value="False"/>
                                        <On Platform="Android"
                                            Value="True"/>
                                    </OnPlatform>
                                </Switch.IsVisible>
                            </Switch>

                            <Label Grid.Row="3" 
                                   Grid.Column="0" 
                                   Text="Force camera2 API (must be on Android 6 or above, may be helpful if you're experiencing errors but may make more, requires a force quit/restart to take effect)">
                                <Label.IsVisible>
                                    <OnPlatform x:TypeArguments="system:Boolean">
                                        <On Platform="iOS"
                                            Value="False"/>
                                        <On Platform="Android"
                                            Value="True"/>
                                    </OnPlatform>
                                </Label.IsVisible>
                            </Label>
                            <Switch Grid.Row="3" 
                                    Grid.Column="1" 
                                    IsToggled="{Binding Settings.IsForceCamera2Enabled}">
                                <Switch.IsVisible>
                                    <OnPlatform x:TypeArguments="system:Boolean">
                                        <On Platform="iOS"
                                            Value="False"/>
                                        <On Platform="Android"
                                            Value="True"/>
                                    </OnPlatform>
                                </Switch.IsVisible>
                            </Switch>

                            <Label Grid.Row="4" 
                                   Grid.Column="0" 
                                   Text="Portrait capture button placement"/>
                            <Frame Grid.Row="4" 
                                   Grid.Column="1">
                                <Picker ItemsSource="{Binding PortraitCaptureButtonPosition}"
                                        SelectedIndex="{Binding Settings.PortraitCaptureButtonPosition, Converter={vc:PortraitCaptureButtonPositionValueConverter}}"/>
                            </Frame>

                            <Label Grid.Row="5" 
                                   Grid.Column="0" 
                                   Text="Landscape capture button horizontal placement"/>
                            <Frame Grid.Row="5" 
                                   Grid.Column="1">
                                <Picker ItemsSource="{Binding LandscapeCaptureButtonHorizontalPosition}"
                                        SelectedIndex="{Binding Settings.LandscapeCaptureButtonHorizontalPosition, Converter={vc:LandscapeCaptureButtonHorizontalPositionValueConverter}}"/>
                            </Frame>

                            <Label Grid.Row="6" 
                                   Grid.Column="0" 
                                   Text="Landscape capture button vertical placement"/>
                            <Frame Grid.Row="6" 
                                   Grid.Column="1">
                                <Picker ItemsSource="{Binding LandscapeCaptureButtonVerticalPosition}"
                                        SelectedIndex="{Binding Settings.LandscapeCaptureButtonVerticalPosition, Converter={vc:LandscapeCaptureButtonVerticalPositionValueConverter}}"/>
                            </Frame>

                            <Label Grid.Row="7" 
                                   Grid.Column="0" 
                                   Text="Pair button horizontal placement (when capture button is centered)"/>
                            <Frame Grid.Row="7" 
                                   Grid.Column="1">
                                <Picker ItemsSource="{Binding PairButtonHorizontalPosition}"
                                        SelectedIndex="{Binding Settings.PairButtonHorizontalPosition, Converter={vc:PairButtonHorizontalPositionValueConverter}}"/>
                            </Frame>

                        </Grid>
                    </DataTemplate>
                </views:Expander.ContentTemplate>
                
            </views:Expander>

            <BoxView/>

            <StackLayout Orientation="Horizontal">
                <Label Text="Prompt to send email when errors occur"/>
                <Switch IsToggled="{Binding Settings.PromptForErrorEmails}"/>
            </StackLayout>

            <StackLayout Orientation="Horizontal">
                <Label Text="Share anonymous usage and error data to help improve CrossCam">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding SetAnalyticsToDebugModeCommand}" 
                                              NumberOfTapsRequired="2"/>
                    </Label.GestureRecognizers>
                </Label>
                <Switch IsToggled="{Binding Settings.IsAnalyticsEnabled}"/>
            </StackLayout>

            <BoxView/>
            <Button Text="Reset to Defaults"
                    Command="{Binding ResetToDefaults}"/>
            <ce:FooterLabel/>
        </StackLayout>
    </ScrollView>
</page:BasePage>