<?xml version="1.0" encoding="utf-8" ?>
<fresh:FreshBaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
                            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                            xmlns:fresh="clr-namespace:FreshMvvm;assembly=FreshMvvm"
                            xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
                            xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
                            xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
                            xmlns:system="clr-namespace:System;assembly=netstandard"
                            x:DataType="vm:SettingsViewModel"
                            x:Class="CrossCam.Page.SettingsPage"
                            Title="Settings">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="BoxView">
                <Setter Property="Color"
                        Value="White"/>
                <Setter Property="HeightRequest"
                        Value="1"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin"
                        Value="10"/>
                <Setter Property="VerticalTextAlignment"
                        Value="Center"/>
                <Setter Property="HorizontalOptions"
                        Value="StartAndExpand"/>
            </Style>
            <Style TargetType="Label" 
                   x:Key="header">
                <Setter Property="FontSize"
                        Value="Large"/>
                <Setter Property="FontAttributes"
                        Value="Bold"/>
            </Style>
            <Style TargetType="Switch">
                <Setter Property="Margin"
                        Value="10"/>
            </Style>
            <x:Double x:Key="saveModesHeight">15</x:Double>
            <Style TargetType="Image"
                   x:Key="saveModes">
                <Setter Property="HeightRequest"
                        Value="{StaticResource saveModesHeight}"/>
                <Setter Property="HorizontalOptions"
                        Value="Center"/>
            </Style>
            <Style TargetType="Frame">
                <Setter Property="BorderColor"
                        Value="White"/>
                <Setter Property="Margin"
                        Value="1"/>
                <Setter Property="Padding"
                        Value="1"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView VerticalOptions="StartAndExpand">
        <StackLayout>

            <BoxView/>
            <Label Text="Viewing Method"
                   Style="{DynamicResource header}"/>
            <Frame>
                <Picker ItemsSource="{Binding Modes}"
                        SelectedIndex="{Binding Settings.Mode, Converter={vc:ModeValueConverter}}"
                        HorizontalOptions="FillAndExpand"/>
            </Frame>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                <Label Text="Cardboard separation distance"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                            SelectedIndex="{Binding Settings.CardboardIpd}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                <Label Text="Add lens correction (may lower frame rate)"/>
                <Switch IsToggled="{Binding Settings.AddBarrelDistortion}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <MultiTrigger TargetType="StackLayout">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                              Value="True"/>
                            <BindingCondition Binding="{Binding Settings.AddBarrelDistortion}"
                                              Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible"
                                Value="True"/>
                    </MultiTrigger>
                </StackLayout.Triggers>
                <Label Text="Add lens correction to final images only (may slow down final display)"/>
                <Switch IsToggled="{Binding Settings.AddBarrelDistortionFinalOnly}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <MultiTrigger TargetType="StackLayout">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}"
                                              Value="True"/>
                            <BindingCondition Binding="{Binding Settings.AddBarrelDistortion}"
                                              Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible"
                                Value="True"/>
                    </MultiTrigger>
                </StackLayout.Triggers>
                <Label Text="Lens correction strength"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                            SelectedIndex="{Binding Settings.CardboardBarrelDistortion}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                <Label Text="Downsize preview (may increase frame rate)"/>
                <Switch IsToggled="{Binding Settings.CardboardSetMaxResolution}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Cardboard}}">
                <Label Text="Immersive final viewing"/>
                <Switch IsToggled="{Binding Settings.ImmersiveCardboardFinal}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}">
                <Label Text="Maximum parallel view image width (points)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                        SelectedIndex="{Binding Settings.MaximumParallelWidth}"
                        WidthRequest="50"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <BoxView/>
            <Label Text="Pairing"
                   Style="{DynamicResource header}"/>
            <Button Text="Go to Pairing Setup Page"
                    Command="{Binding NavigateToPairingPageCommand}"/>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.IsPairedPrimary, Converter={vc:NullableBooleanConverter}}">
                <Label Text="Preview frame delay (higher number will reduce frame rate but save battery)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                            SelectedIndex="{Binding Settings.PairedPreviewFrameDelayMs}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.IsPairedPrimary, Converter={vc:NullableBooleanConverter}}">
                <Label Text="Capture countdown length (timer)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            SelectedIndex="{Binding Settings.PairedCaptureCountdown}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.IsPairedPrimary, Converter={vc:NullableBooleanConverter}}">
                <Label Text="Clock sample count (lower number will decrease time required for initial sync but may decrease sync accuracy)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                            SelectedIndex="{Binding Settings.PairSyncSampleCount}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <Label Text="Field of view correction"
                   HorizontalOptions="CenterAndExpand"
                   IsVisible="{Binding Settings.IsPairedPrimary, Converter={vc:NullableBooleanConverter}}"/>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.IsPairedPrimary, Converter={vc:NullableBooleanConverter}}">
                <StackLayout HorizontalOptions="EndAndExpand">
                    <Label Text="{Binding Settings.FovPrimaryCorrection, StringFormat='Primary: {0}'}"
                           HorizontalOptions="EndAndExpand"/>
                    <Label Text="{Binding Settings.FovSecondaryCorrection, StringFormat='Secondary: {0}'}"
                           HorizontalOptions="EndAndExpand"/>
                </StackLayout>
                <Button Text="Reset"
                        Command="{Binding ResetFovCorrectionCommand}"
                        HorizontalOptions="StartAndExpand"
                        VerticalOptions="CenterAndExpand"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Automatic Alignment"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Automatically align after capture"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Align horizontally (for side by side)"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.AlignHorizontallySideBySide}"
                        IsEnabled="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Use keypoint alignment always (vs ECC whenever possible)"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.UseKeypoints1}"
                        IsEnabled="{Binding Settings.AlignmentSettings.IsAutomaticAlignmentOn}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Show advanced alignment settings"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Crosscheck keypoints (vs ratio checks)"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.UseCrossCheck}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Minimum keypoints"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            SelectedIndex="{Binding Settings.AlignmentSettings.MinimumKeypoints}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Discard outliers by distance"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.DiscardOutliersByDistance}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Discard outliers by slope"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.DiscardOutliersBySlope}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Keypoint outlier threshold (tenths of standard deviation)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            SelectedIndex="{Binding Settings.AlignmentSettings.KeypointOutlierThresholdTenths}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Save an unaligned joined copy with matches drawn"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.DrawKeypointMatches}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Do keystone correction"/>
                <Switch IsToggled="{Binding Settings.AlignmentSettings.DoKeystoneCorrection}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Ecc iterations"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneThousand}"
                        SelectedIndex="{Binding Settings.AlignmentSettings.EccIterations}"
                        WidthRequest="50"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Ecc epsilon level"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToTen}"
                        SelectedIndex="{Binding Settings.AlignmentSettings.EccEpsilonLevel}"
                        WidthRequest="50"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Ecc downsized pyramid estimating layers"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToTen}"
                        SelectedIndex="{Binding Settings.AlignmentSettings.EccPyramidLayers}"
                        WidthRequest="50"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Ecc intermediate downsize percentage"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            SelectedIndex="{Binding Settings.AlignmentSettings.EccDownsizePercentage}"
                            WidthRequest="50"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding Settings.AlignmentSettings.ShowAdvancedAlignmentSettings}">
                <Label Text="Ecc minimum required correlation coefficient"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            WidthRequest="50"
                            SelectedIndex="{Binding Settings.AlignmentSettings.EccThresholdPercentage}"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <Button Text="Reset to Defaults"
                    Command="{Binding ResetAlignmentToDefaults}"/>
            <BoxView/>
            <Label Text="Saving"
                   Style="{DynamicResource header}"/>
            <Grid ColumnSpacing="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0"
                       Grid.Column="0"
                       Text="{Binding Settings.ResolutionProportion, StringFormat='{0}%'}"
                       FontSize="{StaticResource saveModesHeight}"/>
                <Label Grid.Row="0"
                       Grid.Column="1"
                       Text="Resolution proportion"/>
                <Frame Grid.Row="0"
                       Grid.Column="2"
                       WidthRequest="50"
                       HorizontalOptions="End">
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                            SelectedIndex="{Binding Settings.ResolutionProportion}"
                            HorizontalOptions="FillAndExpand"/>
                </Frame>
                <StackLayout Grid.Row="1" 
                             Grid.Column="0" 
                             Orientation="Horizontal"
                             VerticalOptions="Center"
                             HorizontalOptions="Center">
                    <BoxView Style="{StaticResource _fuseGuide}"/>
                    <BoxView Style="{StaticResource _fuseGuide}"/>
                </StackLayout>
                <Label Grid.Column="1"
                       Grid.Row="1"
                       Text="Save with fuse guide (a dot above each side)"/>
                <Switch Grid.Column="2" 
                        Grid.Row="1"
                        IsToggled="{Binding Settings.SaveWithFuseGuide}"/>
                <Label Grid.Row="2"
                       Grid.Column="0"
                       Grid.ColumnSpan="3"
                       Text="(Saving will happen in order from top to bottom)"/>
                <Image Grid.Row="3"
                       Grid.Column="0"
                       Source="saveBoth"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="3"
                       Grid.Column="1"
                       Text="Save each side separately (with no edits or border for easier post processing, left side saves first)"/>
                <Switch Grid.Row="3"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveSidesSeparately}"/>
                <Image Grid.Row="4"
                       Grid.Column="0"
                       Source="crossed"
                       Style="{StaticResource saveModes}">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="5"/>
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label Grid.Row="4"
                       Grid.Column="1"
                       Text="Save joined cross view version (with edits and border)">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="5"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Switch Grid.Row="4"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForCrossView}">
                    <Switch.Triggers>
                        <DataTrigger TargetType="Switch"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="5"/>
                        </DataTrigger>
                    </Switch.Triggers>
                </Switch>
                <Image Grid.Row="5"
                       Grid.Column="0"
                       Source="parallel"
                       Style="{StaticResource saveModes}">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="4"/>
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label Grid.Row="5"
                       Grid.Column="1"
                       Text="Save joined parallel view version (with edits and border)">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="4"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Switch Grid.Row="5"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForParallel}">
                    <Switch.Triggers>
                        <DataTrigger TargetType="Switch"
                                     Binding="{Binding Settings.Mode, Converter={vc:EnumCompareConverter}, ConverterParameter={x:Static vm:DrawMode.Parallel}}"
                                     Value="True">
                            <Setter Property="Grid.Row"
                                    Value="4"/>
                        </DataTrigger>
                    </Switch.Triggers>
                </Switch>
                <Image Grid.Row="6"
                       Grid.Column="0"
                       Source="anaglyph"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="6"
                       Grid.Column="1"
                       Text="Save red/cyan anaglyph version (with edits but no border)"/>
                <Switch Grid.Row="6"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForRedCyanAnaglyph}"/>
                <Image Grid.Row="7"
                       Grid.Column="0"
                       Source="grayscaleAnaglyph"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="7"
                       Grid.Column="1"
                       Text="Save grayscale red/cyan anaglyph version (with edits but no border)"/>
                <Switch Grid.Row="7"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForGrayscaleAnaglyph}"/>
                <Image Grid.Row="8"
                       Grid.Column="0"
                       Source="saveOne"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="8"
                       Grid.Column="1"
                       Text="Save first side alone (with no edits or border) (for easy sharing of flat photo with flat view people)"/>
                <Switch Grid.Row="8"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveRedundantFirstSide}"
                        IsEnabled="{Binding EnableFirstSideAloneSwitch}"/>
                <Image Grid.Row="9"
                       Grid.Column="0"
                       Source="triple"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="9"
                       Grid.Column="1"
                       Text="Save triple combination (with edits and border)"/>
                <Switch Grid.Row="9"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForTriple}"/>
                <Image Grid.Row="10"
                       Grid.Column="0"
                       Source="quad"
                       Style="{StaticResource saveModes}"
                       HeightRequest="25"/>
                <Label Grid.Row="10"
                       Grid.Column="1"
                       Text="Save quad combination (with edits and border)"/>
                <Switch Grid.Row="10"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForQuad}"/>
                <Label Grid.Row="11"
                       Grid.Column="0"
                       HorizontalOptions="Center"
                       Text="VR"/>
                <Label Grid.Row="11"
                       Grid.Column="1"
                       Text="Save for Cardboard"/>
                <Switch Grid.Row="11"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForCardboard}"/>
                <Label Grid.Row="12"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Text="{Binding SaveDirectory, StringFormat='Save to: {0}'}"
                       IsVisible="{Binding CanSaveToArbitraryDirectory}"/>
                <Button Grid.Row="12"
                        Grid.Column="2"
                        Command="{Binding ChooseDirectory}"
                        Text="Browse..."
                        IsVisible="False">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding CanSaveToArbitraryDirectory}"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding Settings.SavingDirectory}"
                                                  Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="IsVisible"
                                        Value="True"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Button Grid.Row="13"
                        Grid.Column="2"
                        Command="{Binding ClearDirectory}"
                        Text="Reset"
                        IsVisible="{Binding Settings.SavingDirectory, Converter={vc:IsNotNullConverter}}"/>
                <Label Grid.Row="14"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Text="{Binding ExternalDirectory, StringFormat='Save to external CrossCam directory at: {0} (warning: pictures there will be deleted if CrossCam is uninstalled)'}"
                       IsVisible="{Binding CanSaveToExternalDirectory}"/>
                <Switch Grid.Row="14"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveToExternal}"
                        IsVisible="{Binding CanSaveToExternalDirectory}"/>
            </Grid>
            <BoxView/>
            <Label Text="Border"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Add border"/>
                <Switch IsToggled="{Binding Settings.AddBorder}"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Border color"/>
                <Frame>
                    <Picker ItemsSource="{Binding BorderColors}"
                        SelectedIndex="{Binding Settings.BorderColor, Converter={vc:BorderColorValueConverter}}"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Border thickness (tenths of percentage of width)"/>
                <Frame>
                    <Picker ItemsSource="{Binding ZeroToOneHundred}"
                        SelectedIndex="{Binding Settings.BorderWidthProportion}"
                        WidthRequest="50"
                        HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Clip border off when loading next stereo pair"/>
                <Switch IsToggled="{Binding Settings.ClipBorderOnNextLoad}"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Capture Guides"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lines visible"/>
                <Switch IsToggled="{Binding Settings.AreGuideLinesVisible}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lines visible before first capture"/>
                <Switch IsEnabled="{Binding Settings.AreGuideLinesVisible}"
                        IsToggled="{Binding Settings.ShowGuideLinesWithFirstCapture}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Roll guide visible"/>
                <Switch IsToggled="{Binding Settings.ShowRollGuide}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Donut/dot visible (will cause toe-in, so may require keystone editing)"/>
                <Switch IsToggled="{Binding Settings.IsGuideDonutVisible}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Donut/dot visible before first capture"/>
                <Switch IsEnabled="{Binding Settings.IsGuideDonutVisible}"
                        IsToggled="{Binding Settings.ShowGuideDonutWithFirstCapture}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Show fuse guide (a dot above each side)"/>
                <Switch IsToggled="{Binding Settings.ShowPreviewFuseGuide}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Capture with ghost overlay during second capture"/>
                <Switch IsToggled="{Binding Settings.ShowGhostCaptures}"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Camera"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Tap to point focus, double tap to switch back to continuous focus (or save or clear)"/>
                <Switch IsToggled="{Binding Settings.IsTapToFocusEnabled2}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lock focus and exposure for second picture to focus and exposure from first picture"/>
                <Switch IsToggled="{Binding Settings.IsLockToFirstEnabled}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <StackLayout.IsVisible>
                    <OnPlatform x:TypeArguments="system:Boolean">
                        <On Platform="iOS"
                            Value="False"/>
                        <On Platform="Android"
                            Value="True"/>
                    </OnPlatform>
                </StackLayout.IsVisible>
                <Label Text="Force camera1 API (may be helpful if you're experiencing weirdness but will result in limited functionality, requires a force quit/restart to take effect)"/>
                <Switch IsToggled="{Binding Settings.IsForceCamera1Enabled}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <StackLayout.IsVisible>
                    <OnPlatform x:TypeArguments="system:Boolean">
                        <On Platform="iOS"
                            Value="False"/>
                        <On Platform="Android"
                            Value="True"/>
                    </OnPlatform>
                </StackLayout.IsVisible>
                <Label Text="Force camera2 API (must be on Android 6 or above, may be helpful if you're experiencing errors but may make more, requires a force quit/restart to take effect)"/>
                <Switch IsToggled="{Binding Settings.IsForceCamera2Enabled}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Portrait capture button placement"/>
                <Frame>
                    <Picker ItemsSource="{Binding PortraitCaptureButtonPosition}"
                            SelectedIndex="{Binding Settings.PortraitCaptureButtonPosition, Converter={vc:PortraitCaptureButtonPositionValueConverter}}"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Landscape capture button horizontal placement"/>
                <Frame>
                    <Picker ItemsSource="{Binding LandscapeCaptureButtonHorizontalPosition}"
                            SelectedIndex="{Binding Settings.LandscapeCaptureButtonHorizontalPosition, Converter={vc:LandscapeCaptureButtonHorizontalPositionValueConverter}}"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Landscape capture button vertical placement"/>
                <Frame>
                    <Picker ItemsSource="{Binding LandscapeCaptureButtonVerticalPosition}"
                            SelectedIndex="{Binding Settings.LandscapeCaptureButtonVerticalPosition, Converter={vc:LandscapeCaptureButtonVerticalPositionValueConverter}}"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Pair button horizontal placement (when capture button is centered)"/>
                <Frame>
                    <Picker ItemsSource="{Binding PairButtonHorizontalPosition}"
                            SelectedIndex="{Binding Settings.PairButtonHorizontalPosition, Converter={vc:PairButtonHorizontalPositionValueConverter}}"
                            HorizontalOptions="EndAndExpand"/>
                </Frame>
            </StackLayout>
            <BoxView/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Send error reports"/>
                <Switch IsToggled="{Binding Settings.SendErrorReports1}"/>
            </StackLayout>
            <BoxView/>
            <Button Text="Reset to Defaults"
                    Command="{Binding ResetToDefaults}"/>
            <ce:EmailMeLabel/>
        </StackLayout>
    </ScrollView>
</fresh:FreshBaseContentPage>