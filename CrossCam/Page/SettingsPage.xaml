<?xml version="1.0" encoding="utf-8" ?>
<fresh:FreshBaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
                            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:fresh="clr-namespace:FreshMvvm;assembly=FreshMvvm"
                            xmlns:vm="clr-namespace:CrossCam.ViewModel;assembly=CrossCam"
                            xmlns:vc="clr-namespace:CrossCam.ValueConverter;assembly=CrossCam"
                            xmlns:ce="clr-namespace:CrossCam.CustomElement;assembly=CrossCam"
                            xmlns:system="clr-namespace:System;assembly=netstandard"
                            mc:Ignorable="d"

                            d:DataContext="{d:DesignInstance Type=vm:SettingsViewModel, IsDesignTimeCreatable=False}"
                            x:Class="CrossCam.Page.SettingsPage"
                            Title="Settings">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="BoxView">
                <Setter Property="Color"
                        Value="White"/>
                <Setter Property="HeightRequest"
                        Value="1"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin"
                        Value="10"/>
                <Setter Property="VerticalTextAlignment"
                        Value="Center"/>
                <Setter Property="HorizontalOptions"
                        Value="StartAndExpand"/>
            </Style>
            <Style TargetType="Label" 
                   x:Key="header">
                <Setter Property="FontSize"
                        Value="Large"/>
                <Setter Property="FontAttributes"
                        Value="Bold"/>
            </Style>
            <Style TargetType="Switch">
                <Setter Property="Margin"
                        Value="10"/>
            </Style>
            <Style TargetType="Picker">
                <Setter Property="Margin"
                        Value="10"/>
            </Style>
            <x:Double x:Key="saveModesHeight">15</x:Double>
            <Style TargetType="Image"
                   x:Key="saveModes">
                <Setter Property="HeightRequest"
                        Value="{StaticResource saveModesHeight}"/>
                <Setter Property="HorizontalOptions"
                        Value="Center"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView VerticalOptions="StartAndExpand">
        <StackLayout>
            <BoxView/>
            <Label Text="Border"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Add border"/>
                <Switch IsToggled="{Binding Settings.AddBorder}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Border color"/>
                <Picker ItemsSource="{Binding BorderColors}"
                        SelectedIndex="{Binding Settings.BorderColor, Converter={vc:BorderColorValueConverter}}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Border thickness (tenths of percentage of width)"/>
                <Picker ItemsSource="{Binding ZeroToOneHundred}"
                        SelectedIndex="{Binding Settings.BorderWidthProportion}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Automatic Alignment"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Automatically align after capture"/>
                <Switch IsToggled="{Binding Settings.IsAutomaticAlignmentOn}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{ce:DebugMarkupExtension}">
                <Label Text="Iterations"/>
                <Picker ItemsSource="{Binding ZeroToOneThousand}"
                        SelectedIndex="{Binding Settings.AlignmentIterations2}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{ce:DebugMarkupExtension}">
                <Label Text="Epsilon level"/>
                <Picker ItemsSource="{Binding ZeroToTen}"
                        SelectedIndex="{Binding Settings.AlignmentEpsilonLevel2}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{ce:DebugMarkupExtension}">
                <Label Text="Downsized pyramid estimating layers"/>
                <Picker ItemsSource="{Binding ZeroToTen}"
                        SelectedIndex="{Binding Settings.AlignmentPyramidLayers2}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{ce:DebugMarkupExtension}">
                <Label Text="Intermediate downsize percentage"/>
                <Picker ItemsSource="{Binding ZeroToOneHundred}"
                        SelectedIndex="{Binding Settings.AlignmentDownsizePercentage2}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         IsVisible="{ce:DebugMarkupExtension}">
                <Label Text="Minimum required correlation coefficient"/>
                <Picker ItemsSource="{Binding ZeroToOneHundred}"
                        SelectedIndex="{Binding Settings.AlignmentEccThresholdPercentage2}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Saving"
                   Style="{DynamicResource header}"/>
            <Grid ColumnSpacing="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0"
                       Grid.Column="0"
                       Text="{Binding Settings.ResolutionProportion, StringFormat='{0}%'}"
                       FontSize="{StaticResource saveModesHeight}"/>
                <Label Grid.Row="0"
                       Grid.Column="1"
                       Text="Resolution proportion"/>
                <Picker Grid.Row="0"
                        Grid.Column="2"
                        ItemsSource="{Binding ZeroToOneHundred}"
                        SelectedIndex="{Binding Settings.ResolutionProportion}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
                <Image Grid.Row="1"
                       Grid.Column="0"
                       Source="crossed"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="1"
                       Grid.Column="1"
                       Text="Save joined cross view version (with edits and border)"/>
                <Switch Grid.Row="1"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForCrossView}"/>
                <Image Grid.Row="2"
                       Grid.Column="0"
                       Source="parallel"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="2"
                       Grid.Column="1"
                       Text="Save joined parallel view/VR version (with edits and border)"/>
                <Switch Grid.Row="2"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveForParallel}"/>
                <Image Grid.Row="3"
                       Grid.Column="0"
                       Source="saveBoth"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="3"
                       Grid.Column="1"
                       Text="Save each side separately (with no edits or border) (for easier post processing)"/>
                <Switch Grid.Row="3"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveSidesSeparately}"/>
                <Image Grid.Row="4"
                       Grid.Column="0"
                       Source="saveOne"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="4"
                       Grid.Column="1"
                       Text="Save first side alone (with no edits or border) (for sharing basic photo with flat view people)"/>
                <Switch Grid.Row="4"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveRedundantFirstSide}"
                        IsEnabled="{Binding EnableFirstSideAloneSwitch}"/>
                <Image Grid.Row="5"
                       Grid.Column="0"
                       Source="anaglyph"
                       Style="{StaticResource saveModes}"/>
                <Label Grid.Row="5"
                       Grid.Column="1"
                       Text="Red/cyan anaglyph mode (also changes edit mode to red/cyan anaglyph)"/>
                <Switch Grid.Row="5"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.RedCyanAnaglyphMode}"/>
                <Label Grid.Row="6"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Text="{Binding SaveDirectory, StringFormat='Save to: {0}'}"
                       IsVisible="{Binding CanSaveToArbitraryDirectory}"/>
                <Button Grid.Row="6"
                        Grid.Column="2"
                        Command="{Binding ChooseDirectory}"
                        Text="Browse..."
                        IsVisible="False">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding CanSaveToArbitraryDirectory}"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding Settings.SavingDirectory}"
                                                  Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="IsVisible"
                                        Value="True"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Button Grid.Row="6"
                        Grid.Column="2"
                        Command="{Binding ClearDirectory}"
                        Text="Reset"
                        IsVisible="{Binding Settings.SavingDirectory, Converter={vc:IsNotNullConverter}}"/>
                <Label Grid.Row="7"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Text="{Binding ExternalDirectory, StringFormat='Save to external CrossCam directory at: {0} (warning: pictures there will be deleted if CrossCam is uninstalled)'}"
                       IsVisible="{Binding CanSaveToExternalDirectory}"/>
                <Switch Grid.Row="7"
                        Grid.Column="2"
                        IsToggled="{Binding Settings.SaveToExternal}"
                        IsVisible="{Binding CanSaveToExternalDirectory}"/>
            </Grid>
            <BoxView/>
            <Label Text="Guides"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lines visible"/>
                <Switch IsToggled="{Binding Settings.AreGuideLinesVisible}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lines visible before first capture"/>
                <Switch IsEnabled="{Binding Settings.AreGuideLinesVisible}"
                        IsToggled="{Binding Settings.ShowGuideLinesWithFirstCapture}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Roll guide visible"/>
                <Switch IsToggled="{Binding Settings.ShowRollGuide}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Donut/dot visible (will cause toe-in, so may require keystone editing)"/>
                <Switch IsToggled="{Binding Settings.IsGuideDonutVisible}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Donut/dot visible before first capture"/>
                <Switch IsEnabled="{Binding Settings.IsGuideDonutVisible}"
                        IsToggled="{Binding Settings.ShowGuideDonutWithFirstCapture}"/>
            </StackLayout>
            <BoxView/>
            <Label Text="Camera"
                   Style="{DynamicResource header}"/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Tap to point focus, double tap to switch back to continuous focus (or save or clear)"/>
                <Switch IsToggled="{Binding Settings.IsTapToFocusEnabled2}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <Label Text="Lock focus and exposure for second picture to focus and exposure from first picture"/>
                <Switch IsToggled="{Binding Settings.IsLockToFirstEnabled}"/>
            </StackLayout>
            <StackLayout Orientation="Horizontal">
                <StackLayout.IsVisible>
                    <OnPlatform x:TypeArguments="system:Boolean">
                        <On Platform="iOS"
                            Value="False"/>
                    </OnPlatform>
                </StackLayout.IsVisible>
                <Label Text="Force camera1 (may be helpful if you're experiencing weirdness but will result in limited functionality, requires a force quit/restart to take effect)"/>
                <Switch IsToggled="{Binding Settings.IsForceCamera1Enabled}"/>
            </StackLayout>
            <BoxView/>
            <StackLayout Orientation="Horizontal">
                <Label Text="Handedness (placement of the capture/aperture button on the screen)"/>
                <Picker ItemsSource="{Binding Handednesses}"
                        SelectedIndex="{Binding Settings.Handedness, Converter={vc:HandednessValueConverter}}"
                        BackgroundColor="White"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <BoxView/>
            <Button Text="Reset to Defaults"
                    Command="{Binding ResetToDefaults}"/>
            <ce:EmailMeLabel/>
        </StackLayout>
    </ScrollView>
</fresh:FreshBaseContentPage>